{
	// Place your competitive_cpp_17 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Main template": {
		"scope": "cpp",
		"prefix": "main",
		"body": [
			"#include \"base.h\"",
			"",
			"#define F first",
			"#define S second",
			"#define FOR(i, a, b) for (int i = a; i < b; i++)",
			"#define ROF(i, a, b) for (int i = a - 1; i >= b; i--)",
			"#define ALL(x) (x).begin(), (x).end()",
			"#define SZ(x) static_cast<int>((x).size())",
			"#define PB push_back",
			"#define POP pop_back",
			"#define MP make_pair",
			"#define MT make_tuple",
			" ",
			"using namespace std;",
			" ",
			"using pi = pair<int, int>;",
			"using vi = vector<int>;",
			"using vpi = vector<pi>;",
			"using vvi = vector<vi>;",
			"using ll = long long;",
			"using pll = pair<ll, ll>;",
			"using vll = vector<ll>;",
			"using vpll = vector<pll>;",
			"using vvll = vector<vll>;",
			"using ld = long double;",
			"using ull = unsigned long long;",
			"using vc = vector<char>;",
			"using vvc = vector<vc>;",
			" ",
			"int main(int argc, char** argv) {",
			"#ifdef SYNC_IO",
			"    ios::sync_with_stdio(0);",
			"    cin.tie(0);",
			"#endif",
			"    cout << setprecision(numeric_limits<long double>::max_digits10) << fixed;",
			"    cout << boolalpha;",
			" ",
			"    $0",
			"}"
		]
	}
}